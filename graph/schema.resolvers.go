package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"github.com/dominika232323/token-transfer-api/internal/db"
	"gorm.io/gorm"
	"gorm.io/gorm/clause"
)

// Transfer is the resolver for the transfer field.
func (r *mutationResolver) Transfer(ctx context.Context, fromAddress string, toAddress string, amount int32) (int32, error) {
	database := r.Resolver.DB

	err := database.Transaction(func(tx *gorm.DB) error {
		var sender db.Wallet

		if err := tx.Clauses(clause.Locking{Strength: "UPDATE"}).
			First(&sender, "address = ?", fromAddress).Error; err != nil {
			return fmt.Errorf("sender not found")
		}

		if sender.Balance < int64(amount) {
			return fmt.Errorf("Insufficient balance")
		}

		sender.Balance -= int64(amount)

		if err := tx.Save(&sender).Error; err != nil {
			return err
		}

		var recipient db.Wallet

		if err := tx.Clauses(clause.Locking{Strength: "UPDATE"}).
			First(&recipient, "address = ?", toAddress).Error; err != nil {
			return fmt.Errorf("recipient not found")
		}

		recipient.Balance += int64(amount)

		if err := tx.Save(&recipient).Error; err != nil {
			return err
		}

		return nil
	})

	if err != nil {
		return 0, err
	}

	var updatedSender db.Wallet
	database.First(&updatedSender, "address = ?", fromAddress)
	return int32(updatedSender.Balance), nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }
type queryResolver struct{ *Resolver }
*/
